name: Deploy Forgejo

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Docker
      run: |
        for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
          sudo apt-get remove -y $pkg
        done
        sudo apt-get update
        sudo apt-get install docker-compose -y
        sudo apt-get install -y ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        docker --version
        docker compose version

    - name: Install Vault CLI
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt update && sudo apt install -y vault jq

    - name: Authenticate to Vault (userpass)
      run: |
        export VAULT_ADDR=${{ secrets.VAULT_ADDR }}
        vault login -method=userpass \
          username=${{ secrets.VAULT_USERNAME }} \
          password=${{ secrets.VAULT_PASSWORD }} \
          -format=json > vault_auth.json
        export VAULT_TOKEN=$(jq -r .auth.client_token vault_auth.json)
        echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV

    - name: Fetch Forgejo Secrets
      run: |
        export VAULT_ADDR=${{ secrets.VAULT_ADDR }}
        export VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}
        vault kv get -format=json secret/FORGEJO > forgejo_secrets.json
        cat forgejo_secrets.json | jq -r '.data.data | to_entries[] | "\(.key)=\(.value)"' >> .env

    # AWS ECR Login
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 # Change to your region

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 370693151079.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and Push Docker Image to ECR
      run: |
        IMAGE_NAME=forgejo
        ECR_REGISTRY=370693151079.dkr.ecr.us-east-1.amazonaws.com/adegokebabatunde
        IMAGE_TAG=latest

        docker build -t $IMAGE_NAME .
        docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

    - name: Deploy Forgejo with Docker Compose
      run: |
        docker compose --env-file .env up -d --build
